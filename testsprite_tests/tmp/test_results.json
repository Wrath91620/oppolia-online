[
  {
    "projectId": "592a6267-1182-458f-94cc-8814c1cb32ff",
    "testId": "2802cfcc-ae71-4ed3-9c95-9bc1f37d4e46",
    "userId": "04682498-a0a1-7067-f8b0-32076767f733",
    "title": "TC001-test_send_otp_for_phone_verification",
    "description": "Verify that the /login-phone endpoint successfully sends an OTP to the provided phone number for user authentication.",
    "code": "import requests\n\nBASE_URL = \"http://localhost:8000\"\nAPI_KEY = \"a1621845a9dcc1e8fc7b226d130a3ddc7bf6475f\"\nHEADERS = {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": API_KEY\n}\n\ndef test_send_otp_for_phone_verification():\n    phone_number = \"+966512345678\"  # Example Saudi Arabia phone number in E.164 format\n    url = f\"{BASE_URL}/login-phone\"\n    payload = {\n        \"phone\": phone_number\n    }\n\n    try:\n        response = requests.post(url, json=payload, headers=HEADERS, timeout=30)\n        # Assert HTTP status code is 200 or 201 (accepted for OTP sent)\n        assert response.status_code in (200, 201), f\"Unexpected status code: {response.status_code}\"\n        data = response.json()\n        # Assert the response contains expected keys indicating OTP was sent\n        # Usually a message or success flag would be present\n        assert \"message\" in data or \"success\" in data or \"otp_sent\" in data, \"No confirmation of OTP sent in response.\"\n\n    except requests.exceptions.RequestException as e:\n        assert False, f\"Request failed: {e}\"\n    except ValueError:\n        assert False, \"Response is not valid JSON.\"\n\ntest_send_otp_for_phone_verification()",
    "testStatus": "FAILED",
    "testError": "Traceback (most recent call last):\n  File \"/var/task/handler.py\", line 258, in run_with_retry\n    exec(code, exec_env)\n  File \"<string>\", line 31, in <module>\n  File \"<string>\", line 20, in test_send_otp_for_phone_verification\nAssertionError: Unexpected status code: 419\n",
    "testType": "BACKEND",
    "createFrom": "mcp",
    "created": "2025-08-25T09:04:29.676Z",
    "modified": "2025-08-25T09:05:08.786Z"
  },
  {
    "projectId": "592a6267-1182-458f-94cc-8814c1cb32ff",
    "testId": "99c9a50d-b50c-4cc6-b94e-40f805e81176",
    "userId": "04682498-a0a1-7067-f8b0-32076767f733",
    "title": "TC002-test_verify_otp_and_authenticate_user",
    "description": "Ensure that the /verify-otp POST endpoint correctly verifies the OTP and authenticates the user, granting access based on role.",
    "code": "import requests\n\nBASE_URL = \"http://localhost:8000\"\nTIMEOUT = 30\n\n# No Authorization header for OTP sending and verifying\n\n\ndef test_verify_otp_and_authenticate_user():\n    phone_number = \"+1234567890\"\n    send_otp_payload = {\"phone\": phone_number}\n\n    try:\n        # Step 1: Send OTP using /login-phone endpoint (No Auth header)\n        response_send_otp = requests.post(\n            f\"{BASE_URL}/login-phone\",\n            json=send_otp_payload,\n            timeout=TIMEOUT\n        )\n        assert response_send_otp.status_code == 200, \"Failed to send OTP\"\n        # Expect OTP to be in response or simulate known OTP for test\n        send_otp_data = response_send_otp.json()\n        # For testing, assume OTP is returned in response under \"otp\" key (mock/testing environment)\n        otp = send_otp_data.get(\"otp\")\n        assert otp is not None and isinstance(otp, str), \"OTP not returned in response\"\n\n        # Step 2: Verify OTP and authenticate user via /verify-otp POST endpoint (No Auth header)\n        verify_otp_payload = {\n            \"phone\": phone_number,\n            \"otp\": otp\n        }\n\n        response_verify_otp = requests.post(\n            f\"{BASE_URL}/verify-otp\",\n            json=verify_otp_payload,\n            timeout=TIMEOUT\n        )\n        assert response_verify_otp.status_code == 200, f\"OTP verification failed with status {response_verify_otp.status_code}\"\n        verify_otp_data = response_verify_otp.json()\n\n        # Validate presence of authentication token or session info\n        assert \"token\" in verify_otp_data or \"access_token\" in verify_otp_data, \"Authentication token missing\"\n        token = verify_otp_data.get(\"token\") or verify_otp_data.get(\"access_token\")\n        assert isinstance(token, str) and len(token) > 0, \"Invalid authentication token\"\n\n        # Validate user role-based access\n        assert \"user\" in verify_otp_data and \"role\" in verify_otp_data[\"user\"], \"User role info missing\"\n        role = verify_otp_data[\"user\"][\"role\"]\n        assert role in [\"Admin\", \"Designer\", \"User\", \"Sales Manager\", \"Area Manager\"], f\"Unexpected user role: {role}\"\n\n        # Optional: Test access to homepage or user dashboard based on authenticated token\n        auth_headers = {\n            \"Authorization\": f\"Bearer {token}\"\n        }\n        response_homepage = requests.get(\n            f\"{BASE_URL}/\",\n            headers=auth_headers,\n            timeout=TIMEOUT\n        )\n        assert response_homepage.status_code == 200, \"Failed to access homepage with authenticated user\"\n        homepage_content = response_homepage.text\n        assert any(keyword in homepage_content.lower() for keyword in [\"homepage\", \"welcome\", \"dashboard\"]), \"Homepage content check failed\"\n\n    except requests.RequestException as e:\n        assert False, f\"Request failed: {e}\"\n\n\ntest_verify_otp_and_authenticate_user()\n",
    "testStatus": "FAILED",
    "testError": "Traceback (most recent call last):\n  File \"/var/task/handler.py\", line 258, in run_with_retry\n    exec(code, exec_env)\n  File \"<string>\", line 68, in <module>\n  File \"<string>\", line 20, in test_verify_otp_and_authenticate_user\nAssertionError: Failed to send OTP\n",
    "testType": "BACKEND",
    "createFrom": "mcp",
    "created": "2025-08-25T09:04:29.682Z",
    "modified": "2025-08-25T09:05:42.958Z"
  },
  {
    "projectId": "592a6267-1182-458f-94cc-8814c1cb32ff",
    "testId": "249cef99-bf1a-4477-b75b-a012ae053613",
    "userId": "04682498-a0a1-7067-f8b0-32076767f733",
    "title": "TC003-test_logout_user",
    "description": "Test that the /logout endpoint properly logs out the authenticated user and invalidates the session or token.",
    "code": "import requests\n\nBASE_URL = \"http://localhost:8000\"\nTIMEOUT = 30\n\ndef test_logout_user():\n    headers = {\n        \"Accept\": \"application/json\"\n    }\n\n    login_phone_url = f\"{BASE_URL}/login-phone\"\n    verify_otp_url = f\"{BASE_URL}/verify-otp\"\n    logout_url = f\"{BASE_URL}/logout\"\n\n    phone_payload = {\"phone\": \"+1234567890\"}\n\n    try:\n        resp = requests.post(login_phone_url, json=phone_payload, headers=headers, timeout=TIMEOUT)\n        assert resp.status_code == 200\n\n        otp_payload = {\"phone\": \"+1234567890\", \"otp\": \"123456\"}\n        resp = requests.post(verify_otp_url, json=otp_payload, headers=headers, timeout=TIMEOUT)\n        assert resp.status_code == 200\n        auth_data = resp.json()\n        token = auth_data.get(\"access_token\") or auth_data.get(\"token\")\n        assert token is not None and isinstance(token, str) and token != \"\"\n\n        auth_headers = {\n            \"Accept\": \"application/json\",\n            \"Authorization\": f\"Bearer {token}\"\n        }\n\n        resp = requests.post(logout_url, headers=auth_headers, timeout=TIMEOUT)\n        assert resp.status_code == 200 or resp.status_code == 204\n\n        protected_url = f\"{BASE_URL}/my-orders\"\n        resp = requests.get(protected_url, headers=auth_headers, timeout=TIMEOUT)\n        assert resp.status_code in (401, 403)\n\n    except requests.exceptions.RequestException as e:\n        assert False, f\"Request failed: {e}\"\n\ntest_logout_user()\n",
    "testStatus": "FAILED",
    "testError": "Traceback (most recent call last):\n  File \"/var/task/handler.py\", line 258, in run_with_retry\n    exec(code, exec_env)\n  File \"<string>\", line 43, in <module>\n  File \"<string>\", line 19, in test_logout_user\nAssertionError\n",
    "testType": "BACKEND",
    "createFrom": "mcp",
    "created": "2025-08-25T09:04:29.688Z",
    "modified": "2025-08-25T09:05:45.704Z"
  },
  {
    "projectId": "592a6267-1182-458f-94cc-8814c1cb32ff",
    "testId": "0f247e37-6365-48b8-866c-ba23a390c778",
    "userId": "04682498-a0a1-7067-f8b0-32076767f733",
    "title": "TC004-test_create_new_order",
    "description": "Validate that the /orders POST endpoint allows a user to create a new order with all required details and returns the correct order information.",
    "code": "import requests\n\nBASE_URL = \"http://localhost:8000\"\nAPI_KEY = \"a1621845a9dcc1e8fc7b226d130a3ddc7bf6475f\"\nHEADERS = {\n    \"Authorization\": f\"Api-Key {API_KEY}\",\n    \"Content-Type\": \"application/json\",\n    \"Accept-Language\": \"en\"\n}\nTIMEOUT = 30\n\ndef test_create_new_order():\n    # Step 1: Verify homepage loads in English and Arabic\n    homepage_en = requests.get(f\"{BASE_URL}/\", headers={**HEADERS, \"Accept-Language\": \"en\"}, timeout=TIMEOUT)\n    assert homepage_en.status_code == 200\n\n    homepage_ar = requests.get(f\"{BASE_URL}/\", headers={**HEADERS, \"Accept-Language\": \"ar\"}, timeout=TIMEOUT)\n    assert homepage_ar.status_code == 200\n\n    # Step 2: Fetch the order creation form (simulate UI stepper and form loading)\n    form_resp = requests.get(f\"{BASE_URL}/orders/create\", headers=HEADERS, timeout=TIMEOUT)\n    assert form_resp.status_code == 200\n    assert \"form\" in form_resp.text.lower()  # basic validation form presence\n\n    # Step 3: Prepare order payload with required details\n    order_payload = {\n        \"customer_name\": \"Test User\",\n        \"customer_phone\": \"+1234567890\",\n        \"language\": \"en\",\n        \"order_items\": [\n            {\n                \"product_id\": 1,\n                \"quantity\": 2,\n                \"notes\": \"Use matte finish\"\n            }\n        ],\n        \"delivery_address\": \"123 Test St, Test City\",\n        \"preferred_installation_date\": \"2025-10-15\",\n        \"special_requests\": \"Include extra lighting\"\n    }\n\n    # Step 4: Create the order via POST /orders\n    create_resp = requests.post(f\"{BASE_URL}/orders\", json=order_payload, headers=HEADERS, timeout=TIMEOUT)\n    try:\n        assert create_resp.status_code == 201 or create_resp.status_code == 200\n        response_json = create_resp.json()\n        # Validate returned order info contains expected keys and values\n        assert \"id\" in response_json\n        assert response_json.get(\"customer_name\") == order_payload[\"customer_name\"]\n        assert response_json.get(\"language\") == order_payload[\"language\"]\n        assert isinstance(response_json.get(\"order_items\"), list)\n        assert len(response_json[\"order_items\"]) == 1\n        assert response_json[\"order_items\"][0][\"product_id\"] == order_payload[\"order_items\"][0][\"product_id\"]\n    finally:\n        # Cleanup: Delete the created order to prevent test data accumulation\n        if create_resp.status_code in (200, 201):\n            order_id = create_resp.json().get(\"id\")\n            if order_id:\n                del_resp = requests.delete(f\"{BASE_URL}/orders/{order_id}\", headers=HEADERS, timeout=TIMEOUT)\n                # It is OK if deletion fails; just avoid interfering with other systems\n\ntest_create_new_order()\n",
    "testStatus": "FAILED",
    "testError": "Traceback (most recent call last):\n  File \"/var/task/handler.py\", line 258, in run_with_retry\n    exec(code, exec_env)\n  File \"<string>\", line 62, in <module>\n  File \"<string>\", line 45, in test_create_new_order\nAssertionError\n",
    "testType": "BACKEND",
    "createFrom": "mcp",
    "created": "2025-08-25T09:04:29.694Z",
    "modified": "2025-08-25T09:06:07.495Z"
  },
  {
    "projectId": "592a6267-1182-458f-94cc-8814c1cb32ff",
    "testId": "048f0d2f-e009-4112-9a69-414c02a65c9d",
    "userId": "04682498-a0a1-7067-f8b0-32076767f733",
    "title": "TC005-test_accept_order_draft",
    "description": "Check that the /order/{order}/accept-draft/{draft} POST endpoint allows a user to accept a draft for a specific order and updates the order status accordingly.",
    "code": "import requests\nimport time\n\nBASE_URL = \"http://localhost:8000\"\nHEADERS = {\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"}\nTIMEOUT = 30\n\n\ndef test_accept_order_draft():\n    created_order_id = None\n    try:\n        # Step 1: Create a new order\n        order_payload = {\n            \"customer_name\": \"Test User\",\n            \"customer_phone\": \"0123456789\"\n        }\n        create_order_resp = requests.post(\n            f\"{BASE_URL}/orders\",\n            headers=HEADERS,\n            json=order_payload,\n            timeout=TIMEOUT,\n        )\n        assert create_order_resp.status_code in [200, 201], \\\n            f\"Order creation failed: {create_order_resp.status_code} {create_order_resp.text}\"\n        order_data = create_order_resp.json()\n        created_order_id = order_data.get(\"id\") or order_data.get(\"order_id\")\n        assert created_order_id, \"Created order ID not found in response\"\n\n        # Step 2: Get drafts for this order\n        my_orders_resp = requests.get(\n            f\"{BASE_URL}/my-orders\",\n            headers=HEADERS,\n            timeout=TIMEOUT,\n        )\n        assert my_orders_resp.status_code == 200, f\"Failed to get user's orders: {my_orders_resp.text}\"\n        orders = my_orders_resp.json()\n        target_order = None\n        for order in orders:\n            if str(order.get(\"id\")) == str(created_order_id):\n                target_order = order\n                break\n        assert target_order, \"Created order not found in user's orders\"\n\n        drafts = target_order.get(\"drafts\") or target_order.get(\"order_drafts\") or []\n        assert drafts, \"No drafts found for the created order to accept\"\n\n        draft_id = drafts[0].get(\"id\") or drafts[0].get(\"draft_id\")\n        assert draft_id, \"Draft ID not found in draft data\"\n\n        # Step 3: Accept the draft\n        accept_url = f\"{BASE_URL}/order/{created_order_id}/accept-draft/{draft_id}\"\n        accept_resp = requests.post(\n            accept_url,\n            headers=HEADERS,\n            timeout=TIMEOUT,\n        )\n        assert accept_resp.status_code == 200, f\"Accept draft request failed: {accept_resp.status_code} {accept_resp.text}\"\n\n        accept_resp_json = accept_resp.json()\n        updated_status = accept_resp_json.get(\"status\") or accept_resp_json.get(\"order_status\")\n        assert updated_status, \"Order status not present in accept draft response\"\n        assert updated_status.lower() in [\"draft accepted\", \"accepted\", \"in progress\", \"approved\"], \\\n            f\"Unexpected order status after draft acceptance: {updated_status}\"\n\n    finally:\n        # Cleanup\n        if created_order_id:\n            try:\n                delete_resp = requests.delete(\n                    f\"{BASE_URL}/orders/{created_order_id}\",\n                    headers=HEADERS,\n                    timeout=TIMEOUT,\n                )\n                assert delete_resp.status_code in [200, 204, 202], f\"Order deletion failed: {delete_resp.status_code} {delete_resp.text}\"\n            except Exception:\n                pass\n\n\ntest_accept_order_draft()\n",
    "testStatus": "FAILED",
    "testError": "Traceback (most recent call last):\n  File \"/var/task/handler.py\", line 258, in run_with_retry\n    exec(code, exec_env)\n  File \"<string>\", line 79, in <module>\n  File \"<string>\", line 23, in test_accept_order_draft\nAssertionError: Order creation failed: 419 {\n    \"message\": \"CSRF token mismatch.\",\n    \"exception\": \"Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\HttpException\",\n    \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Exceptions\\\\Handler.php\",\n    \"line\": 639,\n    \"trace\": [\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Exceptions\\\\Handler.php\",\n            \"line\": 582,\n            \"function\": \"prepareException\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Exceptions\\\\Handler\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Pipeline.php\",\n            \"line\": 51,\n            \"function\": \"render\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Exceptions\\\\Handler\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 188,\n            \"function\": \"handleException\",\n            \"class\": \"Illuminate\\\\Routing\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\View\\\\Middleware\\\\ShareErrorsFromSession.php\",\n            \"line\": 49,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\View\\\\Middleware\\\\ShareErrorsFromSession\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Session\\\\Middleware\\\\StartSession.php\",\n            \"line\": 121,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Session\\\\Middleware\\\\StartSession.php\",\n            \"line\": 64,\n            \"function\": \"handleStatefulRequest\",\n            \"class\": \"Illuminate\\\\Session\\\\Middleware\\\\StartSession\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Session\\\\Middleware\\\\StartSession\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Cookie\\\\Middleware\\\\AddQueuedCookiesToResponse.php\",\n            \"line\": 37,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Cookie\\\\Middleware\\\\AddQueuedCookiesToResponse\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Cookie\\\\Middleware\\\\EncryptCookies.php\",\n            \"line\": 75,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Cookie\\\\Middleware\\\\EncryptCookies\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 119,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 807,\n            \"function\": \"then\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 786,\n            \"function\": \"runRouteWithinStack\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 750,\n            \"function\": \"runRoute\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 739,\n            \"function\": \"dispatchToRoute\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Kernel.php\",\n            \"line\": 201,\n            \"function\": \"dispatch\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 144,\n            \"function\": \"Illuminate\\\\Foundation\\\\Http\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Kernel\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\livewire\\\\livewire\\\\src\\\\Features\\\\SupportDisablingBackButtonCache\\\\DisableBackButtonCacheMiddleware.php\",\n            \"line\": 19,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Livewire\\\\Features\\\\SupportDisablingBackButtonCache\\\\DisableBackButtonCacheMiddleware\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest.php\",\n            \"line\": 21,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\ConvertEmptyStringsToNull.php\",\n            \"line\": 31,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\ConvertEmptyStringsToNull\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest.php\",\n            \"line\": 21,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TrimStrings.php\",\n            \"line\": 51,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TrimStrings\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Http\\\\Middleware\\\\ValidatePostSize.php\",\n            \"line\": 27,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Http\\\\Middleware\\\\ValidatePostSize\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\PreventRequestsDuringMaintenance.php\",\n            \"line\": 110,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\PreventRequestsDuringMaintenance\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Http\\\\Middleware\\\\HandleCors.php\",\n            \"line\": 49,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Http\\\\Middleware\\\\HandleCors\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Http\\\\Middleware\\\\TrustProxies.php\",\n            \"line\": 58,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Http\\\\Middleware\\\\TrustProxies\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\InvokeDeferredCallbacks.php\",\n            \"line\": 22,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\InvokeDeferredCallbacks\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 119,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Kernel.php\",\n            \"line\": 176,\n            \"function\": \"then\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Kernel.php\",\n            \"line\": 145,\n            \"function\": \"sendRequestThroughRouter\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Kernel\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Application.php\",\n            \"line\": 1188,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Kernel\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\public\\\\index.php\",\n            \"line\": 17,\n            \"function\": \"handleRequest\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Application\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\resources\\\\server.php\",\n            \"line\": 23,\n            \"function\": \"require_once\"\n        }\n    ]\n}\n",
    "testType": "BACKEND",
    "createFrom": "mcp",
    "created": "2025-08-25T09:04:29.700Z",
    "modified": "2025-08-25T09:05:46.858Z"
  },
  {
    "projectId": "592a6267-1182-458f-94cc-8814c1cb32ff",
    "testId": "88019752-c70d-496e-830c-787f2de45dc2",
    "userId": "04682498-a0a1-7067-f8b0-32076767f733",
    "title": "TC006-test_register_as_designer",
    "description": "Verify that the /joinasdesigner POST endpoint registers a new designer with valid data and stores the profile correctly.",
    "code": "import requests\nimport uuid\n\nBASE_URL = \"http://localhost:8000\"\nAPI_KEY = \"a1621845a9dcc1e8fc7b226d130a3ddc7bf6475f\"\nHEADERS = {\n    \"Content-Type\": \"application/json\",\n    \"X-API-KEY\": API_KEY\n}\n\ndef test_register_as_designer():\n    \"\"\"\n    Verify that the /joinasdesigner POST endpoint registers a new designer with valid data and stores the profile correctly.\n    \"\"\"\n\n    # Prepare a unique email and phone to avoid conflict on repeated test runs\n    unique_suffix = str(uuid.uuid4())[:8]\n    designer_data = {\n        \"name\": f\"Test Designer {unique_suffix}\",\n        \"email\": f\"test_designer_{unique_suffix}@example.com\",\n        \"phone\": f\"+9665{unique_suffix[:6]}\",  # Saudi number format example\n        \"password\": \"StrongPassw0rd!\",\n        \"password_confirmation\": \"StrongPassw0rd!\",\n        \"kitchen_shape\": \"L-shape\",\n        \"style\": \"Modern\",\n        \"languages\": [\"ar\", \"en\"],\n        \"portfolio_images\": [\n            # Assuming API accepts base64 encoded images or URLs or file references; \n            # Here just send dummy URLs or placeholders as example\n            \"https://example.com/image1.jpg\",\n            \"https://example.com/image2.jpg\"\n        ],\n        \"bio\": \"Experienced kitchen designer with expertise in modern and Arabic styles.\"\n    }\n\n    # The PRD and instructions emphasize UI-related elements like multi-language and kitchen shape/style selection.\n    # Include kitchen_shape, style, and languages fields to mimic a real registration.\n\n    created_designer_id = None\n    try:\n        response = requests.post(\n            f\"{BASE_URL}/joinasdesigner\",\n            json=designer_data,\n            headers=HEADERS,\n            timeout=30\n        )\n        # Validate response is successful registration (usually 201 or 200)\n        assert response.status_code in (200, 201), f\"Unexpected status code: {response.status_code}\"\n        response_json = response.json()\n\n        # Validate response body contains expected fields such as an ID or confirmation message\n        assert isinstance(response_json, dict), \"Response is not a JSON object\"\n        assert \"id\" in response_json or \"designer_id\" in response_json or \"data\" in response_json, \"Response missing designer ID\"\n        \n        # Attempt to get the created designer ID from known possible keys\n        if \"id\" in response_json:\n            created_designer_id = response_json[\"id\"]\n        elif \"designer_id\" in response_json:\n            created_designer_id = response_json[\"designer_id\"]\n        elif \"data\" in response_json and isinstance(response_json[\"data\"], dict):\n            created_designer_id = response_json[\"data\"].get(\"id\")\n\n        assert created_designer_id is not None, \"Designer ID not found in response\"\n\n        # Optional: Verify stored profile by fetching or other means\n        # This endpoint is not defined in PRD, but /designers GET exists, we can check if newly created designer appears\n        get_response = requests.get(\n            f\"{BASE_URL}/designers\",\n            headers=HEADERS,\n            timeout=30\n        )\n        assert get_response.status_code == 200, \"Failed to get designers list\"\n        designers_list = get_response.json()\n        assert isinstance(designers_list, list) or (isinstance(designers_list, dict) and \"data\" in designers_list), \"Designers list response structure unexpected\"\n        \n        found = False\n        if isinstance(designers_list, dict) and \"data\" in designers_list and isinstance(designers_list[\"data\"], list):\n            for d in designers_list[\"data\"]:\n                if (d.get(\"id\") == created_designer_id or d.get(\"email\") == designer_data[\"email\"]):\n                    found = True\n                    # Check key profile fields\n                    assert d.get(\"name\") == designer_data[\"name\"]\n                    break\n        elif isinstance(designers_list, list):\n            for d in designers_list:\n                if (d.get(\"id\") == created_designer_id or d.get(\"email\") == designer_data[\"email\"]):\n                    found = True\n                    assert d.get(\"name\") == designer_data[\"name\"]\n                    break\n        assert found, \"Registered designer not found in designers list\"\n\n    finally:\n        # Cleanup: delete the created designer to keep test idempotent, if deletion endpoint exists\n        # PRD does not specify a delete designer endpoint, skipping actual delete.\n        # If exists, the code may look like:\n        # if created_designer_id:\n        #     requests.delete(f\"{BASE_URL}/designers/{created_designer_id}\", headers=HEADERS, timeout=30)\n        pass\n\ntest_register_as_designer()",
    "testStatus": "FAILED",
    "testError": "Traceback (most recent call last):\n  File \"/var/task/handler.py\", line 258, in run_with_retry\n    exec(code, exec_env)\n  File \"<string>\", line 100, in <module>\n  File \"<string>\", line 48, in test_register_as_designer\nAssertionError: Unexpected status code: 419\n",
    "testType": "BACKEND",
    "createFrom": "mcp",
    "created": "2025-08-25T09:04:29.706Z",
    "modified": "2025-08-25T09:05:10.642Z"
  },
  {
    "projectId": "592a6267-1182-458f-94cc-8814c1cb32ff",
    "testId": "9c61197d-151b-46c3-b7e3-762ce0acfcad",
    "userId": "04682498-a0a1-7067-f8b0-32076767f733",
    "title": "TC007-test_list_all_products",
    "description": "Ensure that the /products GET endpoint returns a complete and accurate list of all products available in the catalog.",
    "code": "import requests\n\nBASE_URL = \"http://localhost:8000\"\nAPI_KEY = \"a1621845a9dcc1e8fc7b226d130a3ddc7bf6475f\"\nTIMEOUT = 30\n\ndef test_list_all_products():\n    headers = {\n        \"Authorization\": f\"Api-Key {API_KEY}\",\n        \"Accept\": \"application/json\"\n    }\n    try:\n        response = requests.get(f\"{BASE_URL}/products\", headers=headers, timeout=TIMEOUT)\n        response.raise_for_status()\n        products = response.json()\n\n        # Assert response is a list (the catalog of products)\n        assert isinstance(products, list), \"Response is not a list\"\n\n        # Assert each product has at least expected keys (id, name, possibly more)\n        for product in products:\n            assert isinstance(product, dict), \"Product item is not a dictionary\"\n            assert \"id\" in product, \"Product missing 'id'\"\n            assert \"name\" in product or \"title\" in product, \"Product missing 'name' or 'title'\"\n\n        # Optional: check that the list is not empty (catalog is not empty)\n        assert len(products) > 0, \"Product list is empty, catalog might be incomplete\"\n\n    except requests.exceptions.RequestException as e:\n        assert False, f\"Request to list products failed: {e}\"\n\ntest_list_all_products()",
    "testStatus": "FAILED",
    "testError": "Traceback (most recent call last):\n  File \"/var/task/requests/models.py\", line 974, in json\n    return complexjson.loads(self.text, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/lang/lib/python3.12/site-packages/simplejson/__init__.py\", line 514, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/lang/lib/python3.12/site-packages/simplejson/decoder.py\", line 386, in decode\n    obj, end = self.raw_decode(s)\n               ^^^^^^^^^^^^^^^^^^\n  File \"/var/lang/lib/python3.12/site-packages/simplejson/decoder.py\", line 416, in raw_decode\n    return self.scan_once(s, idx=_w(s, idx).end())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsimplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<string>\", line 15, in test_list_all_products\n  File \"/var/task/requests/models.py\", line 978, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nrequests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/task/handler.py\", line 258, in run_with_retry\n    exec(code, exec_env)\n  File \"<string>\", line 32, in <module>\n  File \"<string>\", line 30, in test_list_all_products\nAssertionError: Request to list products failed: Expecting value: line 1 column 1 (char 0)\n",
    "testType": "BACKEND",
    "createFrom": "mcp",
    "created": "2025-08-25T09:04:29.712Z",
    "modified": "2025-08-25T09:05:15.927Z"
  },
  {
    "projectId": "592a6267-1182-458f-94cc-8814c1cb32ff",
    "testId": "8e35a2e6-aa52-46f5-97c9-78d90c08065b",
    "userId": "04682498-a0a1-7067-f8b0-32076767f733",
    "title": "TC008-test_update_installment_status",
    "description": "Test that the /installment/update-status POST endpoint updates the status of an installment correctly and reflects the changes in the system.",
    "code": "import requests\n\nBASE_URL = \"http://localhost:8000\"\nAPI_KEY = \"a1621845a9dcc1e8fc7b226d130a3ddc7bf6475f\"\nHEADERS = {\"Authorization\": f\"ApiKey {API_KEY}\", \"Content-Type\": \"application/json\"}\nTIMEOUT = 30\n\n\ndef test_update_installment_status():\n    # Step 1: Create a new installment to update its status\n    create_installment_url = f\"{BASE_URL}/designer/sales/1/installments\"\n    # We must create a valid sale ID, here using 1 as an example, but since no sale creation API is provided,\n    # we create the installment with minimal required data as placeholder.\n    # In a real scenario, the sale ID would be dynamic or created freshly.\n    installment_payload = {\n        # Assuming the system accepts these fields for creating installment. If unknown, minimal data is sent.\n        \"due_date\": \"2025-12-31\",\n        \"amount\": 1000,\n        \"status\": \"pending\"\n    }\n\n    try:\n        create_response = requests.post(\n            create_installment_url, json=installment_payload, headers=HEADERS, timeout=TIMEOUT\n        )\n        assert create_response.status_code == 201, f\"Failed to create installment: {create_response.text}\"\n        installment_data = create_response.json()\n        installment_id = installment_data.get(\"id\")\n        assert installment_id is not None, \"Installment ID not returned from create\"\n\n        # Step 2: Update installment status\n        update_status_url = f\"{BASE_URL}/installment/update-status\"\n        update_payload = {\n            \"id\": installment_id,\n            \"status\": \"paid\"\n        }\n        update_response = requests.post(update_status_url, json=update_payload, headers=HEADERS, timeout=TIMEOUT)\n        assert update_response.status_code == 200, f\"Failed to update installment status: {update_response.text}\"\n\n        update_resp_data = update_response.json()\n        # Validate the response confirms the update or returns the updated installment\n        assert (\"status\" in update_resp_data and update_resp_data[\"status\"] == \"paid\") or \\\n               (update_resp_data.get(\"message\") and \"updated\" in update_resp_data.get(\"message\").lower()), \\\n            \"Installment status update not reflected in response\"\n\n        # Step 3: Retrieve or confirm the updated installment reflects the new status\n        # No read endpoint specified, so re-update to confirm idempotency and ensure no error\n        update_response2 = requests.post(update_status_url, json=update_payload, headers=HEADERS, timeout=TIMEOUT)\n        assert update_response2.status_code == 200, \"Status re-update failed\"\n    finally:\n        # Clean up: delete the created installment if possible\n        if 'installment_id' in locals():\n            delete_url = f\"{BASE_URL}/installment/{installment_id}\"\n            try:\n                requests.delete(delete_url, headers=HEADERS, timeout=TIMEOUT)\n            except Exception:\n                pass\n\n\ntest_update_installment_status()",
    "testStatus": "FAILED",
    "testError": "Traceback (most recent call last):\n  File \"/var/task/handler.py\", line 258, in run_with_retry\n    exec(code, exec_env)\n  File \"<string>\", line 60, in <module>\n  File \"<string>\", line 26, in test_update_installment_status\nAssertionError: Failed to create installment: <!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <title>Page Expired</title>\n\n        <style>\n            /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}a{background-color:transparent}code{font-family:monospace,monospace;font-size:1em}[hidden]{display:none}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}*,:after,:before{box-sizing:border-box;border:0 solid #e2e8f0}a{color:inherit;text-decoration:inherit}code{font-family:Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}svg,video{display:block;vertical-align:middle}video{max-width:100%;height:auto}.bg-white{--bg-opacity:1;background-color:#fff;background-color:rgba(255,255,255,var(--bg-opacity))}.bg-gray-100{--bg-opacity:1;background-color:#f7fafc;background-color:rgba(247,250,252,var(--bg-opacity))}.border-gray-200{--border-opacity:1;border-color:#edf2f7;border-color:rgba(237,242,247,var(--border-opacity))}.border-gray-400{--border-opacity:1;border-color:#cbd5e0;border-color:rgba(203,213,224,var(--border-opacity))}.border-t{border-top-width:1px}.border-r{border-right-width:1px}.flex{display:flex}.grid{display:grid}.hidden{display:none}.items-center{align-items:center}.justify-center{justify-content:center}.font-semibold{font-weight:600}.h-5{height:1.25rem}.h-8{height:2rem}.h-16{height:4rem}.text-sm{font-size:.875rem}.text-lg{font-size:1.125rem}.leading-7{line-height:1.75rem}.mx-auto{margin-left:auto;margin-right:auto}.ml-1{margin-left:.25rem}.mt-2{margin-top:.5rem}.mr-2{margin-right:.5rem}.ml-2{margin-left:.5rem}.mt-4{margin-top:1rem}.ml-4{margin-left:1rem}.mt-8{margin-top:2rem}.ml-12{margin-left:3rem}.-mt-px{margin-top:-1px}.max-w-xl{max-width:36rem}.max-w-6xl{max-width:72rem}.min-h-screen{min-height:100vh}.overflow-hidden{overflow:hidden}.p-6{padding:1.5rem}.py-4{padding-top:1rem;padding-bottom:1rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.pt-8{padding-top:2rem}.fixed{position:fixed}.relative{position:relative}.top-0{top:0}.right-0{right:0}.shadow{box-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.text-center{text-align:center}.text-gray-200{--text-opacity:1;color:#edf2f7;color:rgba(237,242,247,var(--text-opacity))}.text-gray-300{--text-opacity:1;color:#e2e8f0;color:rgba(226,232,240,var(--text-opacity))}.text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.text-gray-500{--text-opacity:1;color:#a0aec0;color:rgba(160,174,192,var(--text-opacity))}.text-gray-600{--text-opacity:1;color:#718096;color:rgba(113,128,150,var(--text-opacity))}.text-gray-700{--text-opacity:1;color:#4a5568;color:rgba(74,85,104,var(--text-opacity))}.text-gray-900{--text-opacity:1;color:#1a202c;color:rgba(26,32,44,var(--text-opacity))}.uppercase{text-transform:uppercase}.underline{text-decoration:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.tracking-wider{letter-spacing:.05em}.w-5{width:1.25rem}.w-8{width:2rem}.w-auto{width:auto}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}@-webkit-keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@-webkit-keyframes ping{0%{transform:scale(1);opacity:1}75%,to{transform:scale(2);opacity:0}}@keyframes ping{0%{transform:scale(1);opacity:1}75%,to{transform:scale(2);opacity:0}}@-webkit-keyframes pulse{0%,to{opacity:1}50%{opacity:.5}}@keyframes pulse{0%,to{opacity:1}50%{opacity:.5}}@-webkit-keyframes bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:translateY(0);-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}@keyframes bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:translateY(0);-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}@media (min-width:640px){.sm\\:rounded-lg{border-radius:.5rem}.sm\\:block{display:block}.sm\\:items-center{align-items:center}.sm\\:justify-start{justify-content:flex-start}.sm\\:justify-between{justify-content:space-between}.sm\\:h-20{height:5rem}.sm\\:ml-0{margin-left:0}.sm\\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\\:pt-0{padding-top:0}.sm\\:text-left{text-align:left}.sm\\:text-right{text-align:right}}@media (min-width:768px){.md\\:border-t-0{border-top-width:0}.md\\:border-l{border-left-width:1px}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:1024px){.lg\\:px-8{padding-left:2rem;padding-right:2rem}}@media (prefers-color-scheme:dark){.dark\\:bg-gray-800{--bg-opacity:1;background-color:#2d3748;background-color:rgba(45,55,72,var(--bg-opacity))}.dark\\:bg-gray-900{--bg-opacity:1;background-color:#1a202c;background-color:rgba(26,32,44,var(--bg-opacity))}.dark\\:border-gray-700{--border-opacity:1;border-color:#4a5568;border-color:rgba(74,85,104,var(--border-opacity))}.dark\\:text-white{--text-opacity:1;color:#fff;color:rgba(255,255,255,var(--text-opacity))}.dark\\:text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}}\n        </style>\n\n        <style>\n            body {\n                font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n            }\n        </style>\n    </head>\n    <body class=\"antialiased\">\n        <div class=\"relative flex items-top justify-center min-h-screen bg-gray-100 dark:bg-gray-900 sm:items-center sm:pt-0\">\n            <div class=\"max-w-xl mx-auto sm:px-6 lg:px-8\">\n                <div class=\"flex items-center pt-8 sm:justify-start sm:pt-0\">\n                    <div class=\"px-4 text-lg text-gray-500 border-r border-gray-400 tracking-wider\">\n                        419                    </div>\n\n                    <div class=\"ml-4 text-lg text-gray-500 uppercase tracking-wider\">\n                        Page Expired                    </div>\n                </div>\n            </div>\n        </div>\n    </body>\n</html>\n\n",
    "testType": "BACKEND",
    "createFrom": "mcp",
    "created": "2025-08-25T09:04:29.718Z",
    "modified": "2025-08-25T09:05:20.105Z"
  },
  {
    "projectId": "592a6267-1182-458f-94cc-8814c1cb32ff",
    "testId": "3852e9c6-6dc4-4e99-9043-bc3e431d526c",
    "userId": "04682498-a0a1-7067-f8b0-32076767f733",
    "title": "TC009-test_start_manufacturing_process",
    "description": "Validate that the /designer/manufacture/start/{order} POST endpoint initiates the manufacturing process for the specified order and updates the order status.",
    "code": "import requests\nimport json\n\nBASE_URL = \"http://localhost:8000\"\nAPI_KEY = \"a1621845a9dcc1e8fc7b226d130a3ddc7bf6475f\"\nHEADERS = {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"X-API-KEY\": API_KEY\n}\nTIMEOUT = 30\n\n\ndef test_start_manufacturing_process():\n    order_id = None\n    created_order_id = None\n    try:\n        # 1. Create a new order (required to have an order to start manufacturing on)\n        create_order_payload = {\n            # Minimal example payload, expand fields as per API schema if available\n            \"customer_name\": \"Test Customer\",\n            \"kitchen_style\": \"Modern\",\n            \"kitchen_shape\": \"L\",\n            \"language\": \"en\",\n            \"details\": \"Test order for manufacturing start\",\n            # additional required fields should be added here from domain knowledge\n        }\n        create_resp = requests.post(\n            f\"{BASE_URL}/orders\",\n            headers=HEADERS,\n            data=json.dumps(create_order_payload),\n            timeout=TIMEOUT\n        )\n        assert create_resp.status_code == 201, f\"Order creation failed: {create_resp.text}\"\n        created_order = create_resp.json()\n        order_id = created_order.get(\"id\") or created_order.get(\"order_id\")\n        assert order_id is not None, \"Created order ID not found in response\"\n\n        # 2. Start manufacturing process for the created order\n        start_manufacture_resp = requests.post(\n            f\"{BASE_URL}/designer/manufacture/start/{order_id}\",\n            headers=HEADERS,\n            timeout=TIMEOUT\n        )\n        assert start_manufacture_resp.status_code == 200, f\"Start manufacturing failed: {start_manufacture_resp.text}\"\n        start_resp_json = start_manufacture_resp.json()\n\n        # 3. Validate order status updated to \"manufacturing_started\" or equivalent\n        # Assuming response includes order info with status\n        order_status = start_resp_json.get(\"status\") or start_resp_json.get(\"order\", {}).get(\"status\")\n        assert order_status is not None, \"Response missing order status\"\n        assert order_status.lower() in [\"manufacturing_started\", \"in_manufacturing\", \"started\"], (\n            f\"Order status not updated correctly, got: {order_status}\"\n        )\n\n        # 4. Additional validation of response structure\n        assert \"order\" in start_resp_json or \"message\" in start_resp_json, (\n            \"Response lacks expected keys 'order' or 'message'\"\n        )\n\n        # 5. Optionally, retrieve the order and verify status\n        get_order_resp = requests.get(\n            f\"{BASE_URL}/order/{order_id}\",\n            headers=HEADERS,\n            timeout=TIMEOUT\n        )\n        assert get_order_resp.status_code == 200, f\"Fetching order failed: {get_order_resp.text}\"\n        order_data = get_order_resp.json()\n        current_status = order_data.get(\"status\")\n        assert current_status is not None, \"Order status missing in GET order response\"\n        assert current_status.lower() in [\"manufacturing_started\", \"in_manufacturing\", \"started\"], (\n            f\"Order status was not updated after manufacturing start, got: {current_status}\"\n        )\n\n    finally:\n        # Cleanup: Delete the created order if possible\n        if order_id:\n            try:\n                delete_resp = requests.delete(\n                    f\"{BASE_URL}/orders/{order_id}\",\n                    headers=HEADERS,\n                    timeout=TIMEOUT\n                )\n                # Accept 200 or 204 as successful deletion\n                assert delete_resp.status_code in (200, 204), f\"Failed to delete order: {delete_resp.text}\"\n            except Exception:\n                pass\n\n\ntest_start_manufacturing_process()",
    "testStatus": "FAILED",
    "testError": "Traceback (most recent call last):\n  File \"/var/task/handler.py\", line 258, in run_with_retry\n    exec(code, exec_env)\n  File \"<string>\", line 90, in <module>\n  File \"<string>\", line 34, in test_start_manufacturing_process\nAssertionError: Order creation failed: {\n    \"message\": \"CSRF token mismatch.\",\n    \"exception\": \"Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\HttpException\",\n    \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Exceptions\\\\Handler.php\",\n    \"line\": 639,\n    \"trace\": [\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Exceptions\\\\Handler.php\",\n            \"line\": 582,\n            \"function\": \"prepareException\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Exceptions\\\\Handler\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Pipeline.php\",\n            \"line\": 51,\n            \"function\": \"render\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Exceptions\\\\Handler\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 188,\n            \"function\": \"handleException\",\n            \"class\": \"Illuminate\\\\Routing\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\View\\\\Middleware\\\\ShareErrorsFromSession.php\",\n            \"line\": 49,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\View\\\\Middleware\\\\ShareErrorsFromSession\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Session\\\\Middleware\\\\StartSession.php\",\n            \"line\": 121,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Session\\\\Middleware\\\\StartSession.php\",\n            \"line\": 64,\n            \"function\": \"handleStatefulRequest\",\n            \"class\": \"Illuminate\\\\Session\\\\Middleware\\\\StartSession\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Session\\\\Middleware\\\\StartSession\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Cookie\\\\Middleware\\\\AddQueuedCookiesToResponse.php\",\n            \"line\": 37,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Cookie\\\\Middleware\\\\AddQueuedCookiesToResponse\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Cookie\\\\Middleware\\\\EncryptCookies.php\",\n            \"line\": 75,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Cookie\\\\Middleware\\\\EncryptCookies\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 119,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 807,\n            \"function\": \"then\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 786,\n            \"function\": \"runRouteWithinStack\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 750,\n            \"function\": \"runRoute\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Routing\\\\Router.php\",\n            \"line\": 739,\n            \"function\": \"dispatchToRoute\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Kernel.php\",\n            \"line\": 201,\n            \"function\": \"dispatch\",\n            \"class\": \"Illuminate\\\\Routing\\\\Router\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 144,\n            \"function\": \"Illuminate\\\\Foundation\\\\Http\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Kernel\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\livewire\\\\livewire\\\\src\\\\Features\\\\SupportDisablingBackButtonCache\\\\DisableBackButtonCacheMiddleware.php\",\n            \"line\": 19,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Livewire\\\\Features\\\\SupportDisablingBackButtonCache\\\\DisableBackButtonCacheMiddleware\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest.php\",\n            \"line\": 21,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\ConvertEmptyStringsToNull.php\",\n            \"line\": 31,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\ConvertEmptyStringsToNull\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest.php\",\n            \"line\": 21,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TrimStrings.php\",\n            \"line\": 51,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TransformsRequest\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\TrimStrings\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Http\\\\Middleware\\\\ValidatePostSize.php\",\n            \"line\": 27,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Http\\\\Middleware\\\\ValidatePostSize\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\PreventRequestsDuringMaintenance.php\",\n            \"line\": 110,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\PreventRequestsDuringMaintenance\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Http\\\\Middleware\\\\HandleCors.php\",\n            \"line\": 49,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Http\\\\Middleware\\\\HandleCors\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Http\\\\Middleware\\\\TrustProxies.php\",\n            \"line\": 58,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Http\\\\Middleware\\\\TrustProxies\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\InvokeDeferredCallbacks.php\",\n            \"line\": 22,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 183,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Middleware\\\\InvokeDeferredCallbacks\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php\",\n            \"line\": 119,\n            \"function\": \"Illuminate\\\\Pipeline\\\\{closure}\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Kernel.php\",\n            \"line\": 176,\n            \"function\": \"then\",\n            \"class\": \"Illuminate\\\\Pipeline\\\\Pipeline\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Http\\\\Kernel.php\",\n            \"line\": 145,\n            \"function\": \"sendRequestThroughRouter\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Kernel\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Application.php\",\n            \"line\": 1188,\n            \"function\": \"handle\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Http\\\\Kernel\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\public\\\\index.php\",\n            \"line\": 17,\n            \"function\": \"handleRequest\",\n            \"class\": \"Illuminate\\\\Foundation\\\\Application\",\n            \"type\": \"->\"\n        },\n        {\n            \"file\": \"C:\\\\wamp64\\\\www\\\\oppolia-online\\\\oppolia-online\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\resources\\\\server.php\",\n            \"line\": 23,\n            \"function\": \"require_once\"\n        }\n    ]\n}\n",
    "testType": "BACKEND",
    "createFrom": "mcp",
    "created": "2025-08-25T09:04:29.730Z",
    "modified": "2025-08-25T09:05:24.310Z"
  },
  {
    "projectId": "592a6267-1182-458f-94cc-8814c1cb32ff",
    "testId": "27b798ed-7896-4952-b84b-9e556afe3a98",
    "userId": "04682498-a0a1-7067-f8b0-32076767f733",
    "title": "TC010-test_get_user_notifications",
    "description": "Check that the /user/notifications GET endpoint retrieves all notifications for the authenticated user in real-time.",
    "code": "import requests\n\nBASE_URL = \"http://localhost:8000\"\nAPI_KEY = \"a1621845a9dcc1e8fc7b226d130a3ddc7bf6475f\"\nHEADERS = {\n    \"Authorization\": f\"ApiKey {API_KEY}\"\n}\nTIMEOUT = 30\n\ndef test_get_user_notifications():\n    url = f\"{BASE_URL}/user/notifications\"\n    try:\n        response = requests.get(url, headers=HEADERS, timeout=TIMEOUT)\n        # Assert HTTP status code is 200 OK\n        assert response.status_code == 200, f\"Expected status 200, got {response.status_code}\"\n        data = response.json()\n        # The response should be a list or dict containing notifications\n        assert isinstance(data, (list, dict)), \"Response data type is not list or dict\"\n        # Additional validation: Each notification should have expected keys (example: id, message, read, timestamp)\n        if isinstance(data, list):\n            for notif in data:\n                assert isinstance(notif, dict), \"Notification item is not a dict\"\n                # Common keys, adjust if API schema is known\n                assert \"id\" in notif, \"Notification missing 'id'\"\n                assert \"message\" in notif, \"Notification missing 'message'\"\n                assert \"read\" in notif, \"Notification missing 'read' status\"\n                assert \"timestamp\" in notif, \"Notification missing 'timestamp'\"\n        elif isinstance(data, dict):\n            # If dict keys are string ids mapping to notifications\n            for key, notif in data.items():\n                assert isinstance(notif, dict), \"Notification item is not dict\"\n                assert \"id\" in notif, \"Notification missing 'id'\"\n                assert \"message\" in notif, \"Notification missing 'message'\"\n                assert \"read\" in notif, \"Notification missing 'read' status\"\n                assert \"timestamp\" in notif, \"Notification missing 'timestamp'\"\n    except requests.exceptions.Timeout:\n        assert False, \"Request timed out\"\n    except requests.exceptions.RequestException as e:\n        assert False, f\"Request failed with exception: {str(e)}\"\n\ntest_get_user_notifications()",
    "testStatus": "FAILED",
    "testError": "Traceback (most recent call last):\n  File \"/var/task/requests/models.py\", line 974, in json\n    return complexjson.loads(self.text, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/lang/lib/python3.12/site-packages/simplejson/__init__.py\", line 514, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/lang/lib/python3.12/site-packages/simplejson/decoder.py\", line 386, in decode\n    obj, end = self.raw_decode(s)\n               ^^^^^^^^^^^^^^^^^^\n  File \"/var/lang/lib/python3.12/site-packages/simplejson/decoder.py\", line 416, in raw_decode\n    return self.scan_once(s, idx=_w(s, idx).end())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsimplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<string>\", line 16, in test_get_user_notifications\n  File \"/var/task/requests/models.py\", line 978, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nrequests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/task/handler.py\", line 258, in run_with_retry\n    exec(code, exec_env)\n  File \"<string>\", line 41, in <module>\n  File \"<string>\", line 39, in test_get_user_notifications\nAssertionError: Request failed with exception: Expecting value: line 1 column 1 (char 0)\n",
    "testType": "BACKEND",
    "createFrom": "mcp",
    "created": "2025-08-25T09:04:29.742Z",
    "modified": "2025-08-25T09:05:27.200Z"
  }
]
